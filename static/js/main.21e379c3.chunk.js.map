{"version":3,"sources":["components/options/options.module.css","components/header/header.module.css","components/results/results.module.css","components/gameOver/gameOver.module.css","components/intro/intro.module.css","components/startAnimation/startAnimation.module.css","App.tsx","drawGrid.tsx","components/intro/intro.tsx","components/header/header.tsx","components/options/options.tsx","components/startAnimation/startAnimation.tsx","components/results/results.tsx","components/gameOver/gameOver.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","grid","head","food","myTimeOut","fillOneCellOnGrid","cell","color","copyGrid","y","x","Intro","startGame","type","className","style","button","onClick","line","pizza","src","alt","Header","headerScore","showGameOptions","showGameResults","isGameStarted","stopGame","buttonWrapper","header","image","heading","score","possibleGridSize","name","size","possibleSpeedLevel","time","Options","handleOptions","cancelOption","gameGridSize","gameMoveTime","activeOptions","useState","selectedSpeedLevel","setSelectedSpeedLevel","selectedGridSize","setSelectedGrizSize","OptionsWrapper","active","options","action","onSubmit","event","htmlFor","label","dropDownList","id","value","onChange","e","parseInt","target","map","level","button2","StartAnimation","animationWrapper","animation","firstWord","secondWord","Results","cancelResults","activeResults","results","ResultsWrapper","table","index","speedLevel","gridSize","resultList","substring","GameOver","endGameHandler","handleResults","resultName","inputNameHandler","inputEl","useRef","useEffect","current","focus","gameOver","inputWrapper","ref","input","saveButton","possibleKeyPress","tail","directions","App","setGridSize","moveTime","setMoveTime","setResultName","setResults","refreshGrid","setRefreshGrid","start","levelUpAnimation","introAnimation","startAnimation","gameOptions","setGameOptions","storageSnakeResults","localStorage","getItem","JSON","parse","document","body","addEventListener","keyPressHandler","key","findNextKeypress","positionCheck","moveTail","moveHead","interval","setInterval","clearInterval","length","splice","pressedKey","forEach","allowedDirection","push","t","dir","addNewFruit","_","shift","clearTimeout","selectedGrid","selectedSpeed","preventDefault","element","el","width","height","gridArr","gridArr2d","i","j","drawGrid","setTimeout","copyResults","speedLVL","find","speed","gridGrid","resultObj","uuidv4","alert","sortedResults","sort","a","b","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,OAAS,wBAAwB,QAAU,yBAAyB,MAAQ,uBAAuB,aAAe,8BAA8B,cAAgB,+BAA+B,OAAS,wBAAwB,QAAU,2B,gBCA7SD,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,OAAS,uBAAuB,MAAQ,sBAAsB,cAAgB,8BAA8B,QAAU,wBAAwB,MAAQ,sBAAsB,OAAS,yB,iBCArPD,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,OAAS,wBAAwB,QAAU,yBAAyB,MAAQ,uBAAuB,QAAU,yBAAyB,WAAa,4BAA4B,OAAS,wBAAwB,QAAU,2B,gBCA7RD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,OAAS,yBAAyB,QAAU,0BAA0B,MAAQ,wBAAwB,aAAe,+BAA+B,MAAQ,wBAAwB,WAAa,+B,kBCAzPD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,OAAS,sBAAsB,KAAO,oBAAoB,MAAQ,qBAAqB,KAAO,oBAAoB,MAAQ,uB,gBCAzKD,EAAOC,QAAU,CAAC,iBAAmB,yCAAyC,UAAY,kCAAkC,WAAa,mCAAmC,UAAY,kCAAkC,OAAS,iC,sECY/NC,EAWAC,EACAC,EAKAC,E,2FCVSC,EAAoB,SAACC,EAAYC,EAAkBN,GAC9D,IAAMO,EAAQ,YAAOP,GAErB,OADAO,EAASF,EAAKG,GAAGH,EAAKI,GAAGJ,KAAOC,EACzBC,G,iBCIMG,EApBU,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UACzB,OACE,yBAAQC,KAAK,SAASC,UAAWC,IAAMC,OAAQC,QAASL,EAAxD,UACG,IADH,QAGE,qBAAKE,UAAWC,IAAMG,KAAtB,SACG,MAGH,uBAAMJ,UAAWC,IAAMZ,KAAvB,UACE,qBACEW,UAAWC,IAAMI,MACjBC,IAAI,+FACJC,IAAI,UACH,W,gBCoCIC,EA7CW,SAAC,GAA8E,IAA7EC,EAA4E,EAA5EA,YAAaC,EAA+D,EAA/DA,gBAAiBC,EAA8C,EAA9CA,gBAAiBC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,SACxF,OACE,qBAAKb,UAAWC,IAAMa,cAAtB,SACE,sBAAKd,UAAWC,IAAMc,OAAtB,UACE,qBACET,IAAI,6EACJC,IAAI,SACJP,UAAWC,IAAMe,QAElBJ,EACC,qBAAIZ,UAAWC,IAAMgB,QAArB,UACG,IACAR,EAAc,GACb,uBAAMT,UAAWC,IAAMiB,MAAvB,UACGT,EACgB,IAAhBA,EAAoB,SAAW,gBAMtC,oBAAIT,UAAWC,IAAMgB,QAArB,mCAGF,qBAAKjB,UAAWC,IAAMa,cAAtB,SACGF,EACC,mCACE,wBAAQb,KAAK,SAASI,QAASU,EAAUb,UAAWC,IAAMC,OAA1D,wBAKF,qCACE,wBAAQH,KAAK,SAASC,UAAWC,IAAMC,OAAQC,QAASQ,EAAxD,qBACA,wBAAQZ,KAAK,SAASI,QAASO,EAAiBV,UAAWC,IAAMC,OAAjE,gC,gBC3CDiB,EAAmB,CAC9B,CAACC,KAAM,QAASC,KAAM,IACtB,CAACD,KAAM,SAAUC,KAAM,IACvB,CAACD,KAAM,QAASC,KAAM,IACtB,CAACD,KAAM,cAAeC,KAAM,KAGjBC,EAAqB,CAChC,CAACF,KAAM,OAAQG,KAAM,KACrB,CAACH,KAAM,SAAUG,KAAM,KACvB,CAACH,KAAM,OAAQG,KAAM,KACrB,CAACH,KAAM,aAAcG,KAAM,MA8FdC,EAtEY,SAAC,GAMrB,IALLC,EAKI,EALJA,cACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,aACAC,EACI,EADJA,cACI,EACgDC,mBAASF,GADzD,mBACGG,EADH,KACuBC,EADvB,OAE4CF,mBAASH,GAFrD,mBAEGM,EAFH,KAEqBC,EAFrB,KAIJ,OACE,qBAAKlC,UAAS,UAAKC,IAAMkC,eAAX,YAA6BN,GAAiB5B,IAAMmC,QAAlE,SACE,uBACEpC,UAAWC,IAAMoC,QACjBC,OAAO,SACPC,SAAU,SAACC,GAAD,OAAWf,EAAce,EAAOP,EAAkBF,IAH9D,UAME,wBAAOU,QAAQ,aAAazC,UAAWC,IAAMyC,MAA7C,8BAEE,wBACE1C,UAAWC,IAAM0C,aACjBC,GAAG,aACHxB,KAAK,aACLyB,MAAOd,EACPe,SAAU,SAACC,GACTf,EAAsBgB,SAASD,EAAEE,OAAOJ,MAAO,MANnD,SASGvB,EAAmB4B,KAAI,SAACC,GAAD,OACtB,wBAAyBN,MAAOM,EAAM5B,KAAtC,SACG4B,EAAM/B,MADI+B,EAAM/B,cAMzB,wBAAOqB,QAAQ,WAAWzC,UAAWC,IAAMyC,MAA3C,6BAEE,wBACE1C,UAAWC,IAAM0C,aACjBC,GAAG,WACHxB,KAAK,WACLyB,MAAOZ,EACPa,SAAU,SAACC,GAAD,OAAOb,EAAoBc,SAASD,EAAEE,OAAOJ,MAAO,MALhE,SAOG1B,EAAiB+B,KAAI,SAAC/D,GAAD,OACpB,wBAAwB0D,MAAO1D,EAAKkC,KAApC,SACGlC,EAAKiC,MADKjC,EAAKiC,cAOxB,sBAAKpB,UAAWC,IAAMa,cAAtB,UACE,yBAAQf,KAAK,SAASC,UAAWC,IAAMC,OAAvC,UACG,IADH,UAIA,wBAAQH,KAAK,SAASC,UAAWC,IAAMC,OAAQC,QAASuB,EAAxD,uBAIF,wBAAQ3B,KAAK,SAASC,UAAWC,IAAMmD,QAASjD,QAASuB,EAAzD,qB,iBCtFO2B,EAXQ,WACrB,OACE,qBAAKrD,UAAWC,IAAMqD,iBAAtB,SACE,uBAAMtD,UAAWC,IAAMsD,UAAvB,UACE,sBAAMvD,UAAWC,IAAMuD,UAAvB,mBACA,sBAAMxD,UAAWC,IAAMwD,WAAvB,yB,gBCwCOC,EAtCY,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,cAAeC,EAA4B,EAA5BA,cAAeC,EAAa,EAAbA,QACzD,OACE,qBAAK7D,UAAS,UAAKC,IAAM6D,eAAX,YAA6BF,GAAiB3D,IAAMmC,QAAlE,SACE,sBAAKpC,UAAWC,IAAM4D,QAAtB,UACE,oBAAI7D,UAAWC,IAAMgB,QAArB,qBACA,wBAAOjB,UAAWC,IAAM8D,MAAxB,UACE,gCACE,+BACE,mCACA,sCACA,uCACA,6CACA,gDAGJ,gCACGF,EAAQX,KAAI,WAA0Cc,GAA1C,IAAEpB,EAAF,EAAEA,GAAIxB,EAAN,EAAMA,KAAMF,EAAZ,EAAYA,MAAO+C,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,SAA/B,OACX,qBAAalE,UAAWC,IAAMkE,WAA9B,UACE,6BAAKH,EAAQ,IACb,6BAAK5C,EAAKgD,UAAU,EAAG,MACvB,6BAAKlD,IACL,6BAAK+C,IACL,6BAAKC,MALEtB,WAUf,wBAAQ7C,KAAK,SAASC,UAAWC,IAAMC,OAAQC,QAASwD,EAAxD,0BAGA,wBAAQ5D,KAAK,SAASC,UAAWC,IAAMmD,QAASjD,QAASwD,EAAzD,qB,gBCWOU,EAxCa,SAAC,GAMtB,IALLnD,EAKI,EALJA,MACAoD,EAII,EAJJA,eACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,WACAC,EACI,EADJA,iBAEMC,EAAUC,iBAAO,MAMvB,OAJAC,qBAAU,WAERF,EAAQG,QAAQC,UACf,IAED,sBAAK9E,UAAWC,IAAM8E,SAAtB,UACE,qBAAI/E,UAAWC,IAAMgB,QAArB,gCAAkDC,EAAlD,eACA,wBAAOuB,QAAQ,YAAf,UACE,mBAAGzC,UAAWC,IAAMyC,MAApB,6CACA,sBAAK1C,UAAWC,IAAM+E,aAAtB,UACE,uBACEC,IAAKP,EACL1E,UAAWC,IAAMiF,MACjBtC,GAAG,aACH7C,KAAK,OACL8C,MAAO2B,EACP1B,SAAU2B,IAEZ,wBAAQtE,QAAS,kBAAMoE,KAAiBxE,KAAK,SAASC,UAAWC,IAAMkF,WAAvE,wBAKJ,yBAAQpF,KAAK,SAASC,UAAWC,IAAMC,OAAQC,QAASmE,EAAxD,UACG,IADH,qBP7BAc,EAAgC,CAAC,UAAW,aAAc,YAAa,aAYvEC,EAAe,GACfC,EAA0B,CAAC,cAC7BpE,EAAQ,EACRK,EAAO,EAmSIgE,EAhSH,WAAO,IAAD,EACgBzD,mBAASX,EAAiB,GAAGE,MAD7C,mBACT6C,EADS,KACCsB,EADD,OAEgB1D,mBAASR,EAAmB,GAAGC,MAF/C,mBAETkE,EAFS,KAECC,EAFD,OAGoB5D,mBAAS,IAH7B,mBAGT0C,EAHS,KAGGmB,EAHH,OAIc7D,mBAAmB,IAJjC,mBAIT+B,EAJS,KAIA+B,EAJA,OAMsB9D,oBAAS,GAN/B,mBAMT+D,EANS,KAMIC,EANJ,OAOsBhE,mBAAS,CAC7CiE,OAAO,EACPhB,UAAU,EACViB,kBAAkB,EAClBC,gBAAgB,EAChB5D,SAAS,EACTwB,SAAS,EACTqC,gBAAgB,IAdF,mBAOTC,EAPS,KAOIC,EAPJ,KAiBhBxB,qBAAU,WACR,IAAMyB,EAAsBC,aAAaC,QAAQ,gBACjDF,GAAuBT,EAAWY,KAAKC,MAAMJ,IAC7CK,SAASC,KAAKC,iBAAiB,WAAW,SAAC7D,GACzC8D,EAAgB9D,EAAE+D,UAEnB,IAEHlC,qBAAU,WACR,GAAKuB,EAAYJ,MAAjB,CAGAgB,IACAC,IACAC,IACAC,EAAS5B,EAAW,IACpB,IAAM6B,EAAWC,aAAY,WAC3BtB,GAAgBD,KACftE,GAEH,OAAO,kBAAM8F,cAAcF,OAC1B,CAACtB,IAEJ,IAmBMkB,EAAmB,WACnBzB,EAAWgC,OAAS,GACtBhC,EAAWiC,OAAO,EAAG,IAInBV,EAAkB,SAACW,GACvBpC,EAAiBqC,SAAQ,SAACC,GACxB,GAAIF,IAAeE,EAAkB,CACnC,GAAmB,cAAfF,GAAgD,eAAlBlC,EAAW,GAC3C,OAEF,GAAmB,eAAfkC,GAAiD,cAAlBlC,EAAW,GAC5C,OAEF,GAAmB,cAAfkC,GAAgD,YAAlBlC,EAAW,GAC3C,OAEF,GAAmB,YAAfkC,GAA8C,cAAlBlC,EAAW,GACzC,OAEFA,EAAWqC,KAAKH,QAKhBR,EAAgB,WACpB3B,EAAKoC,SAAQ,SAACG,GACRA,EAAEhI,IAAMR,EAAKQ,GAAKgI,EAAEjI,IAAMP,EAAKO,GACjCyG,EAAe,2BAAID,GAAL,IAAkBJ,OAAO,EAAOhB,UAAU,SAKxDmC,EAAW,SAACW,GAChB,OAAQA,GACN,IAAK,aAEDzI,EADEA,EAAKQ,IAAMsE,EAAW,EACjB,CAACtE,EAAG,EAAGD,EAAGP,EAAKO,GAEf,CAACC,EAAGR,EAAKQ,EAAI,EAAGD,EAAGP,EAAKO,GAGjCJ,EAAkB,CAACK,EAAGR,EAAKQ,EAAGD,EAAGP,EAAKO,GAAI,QAASR,GACnD,MAEF,IAAK,YAEDC,EADEA,EAAKO,IAAMuE,EAAW,EACjB,CAACtE,EAAGR,EAAKQ,EAAGD,EAAG,GAEf,CAACC,EAAGR,EAAKQ,EAAGD,EAAGP,EAAKO,EAAI,GAGjCJ,EAAkB,CAACK,EAAGR,EAAKQ,EAAGD,EAAGP,EAAKO,GAAI,QAASR,GACnD,MACF,IAAK,YAEDC,EADa,IAAXA,EAAKQ,EACA,CAACA,EAAGsE,EAAW,EAAGvE,EAAGP,EAAKO,GAE1B,CAACC,EAAGR,EAAKQ,EAAI,EAAGD,EAAGP,EAAKO,GAEjCJ,EAAkB,CAACK,EAAGR,EAAKQ,EAAGD,EAAGP,EAAKO,GAAI,QAASR,GACnD,MACF,IAAK,UAEDC,EADa,IAAXA,EAAKO,EACA,CAACC,EAAGR,EAAKQ,EAAGD,EAAGuE,EAAW,GAE1B,CAACtE,EAAGR,EAAKQ,EAAGD,EAAGP,EAAKO,EAAI,GAEjCJ,EAAkB,CAACK,EAAGR,EAAKQ,EAAGD,EAAGP,EAAKO,GAAI,QAASR,KAKnD8H,EAAW,WACf5B,EAAKsC,KAAK,CAAC/H,EAAGR,EAAKQ,EAAGD,EAAGP,EAAKO,IAC9BJ,EAAkB8F,EAAK,GAAI,QAASlG,GACpC2I,KACAzC,EAAKoC,SAAQ,SAACG,GAAD,OAAOrI,EAAkBqI,EAAG,OAAQzI,OAG7C2I,GAAc,WACd1I,EAAKQ,IAAMP,EAAKO,GAAKR,EAAKO,IAAMN,EAAKM,GACnCuB,EAAQ,KAAO,GACbK,EAAO,KACTA,GAAQ,GAGZL,GAAS,EACT7B,EAAO,CAACO,EAAGmI,SAAS7D,EAAW,GAAIvE,EAAGoI,SAAS7D,EAAW,IAC1D3E,EAAkBF,EAAM,OAAQF,IAEhCkG,EAAK2C,QAEP3C,EAAKoC,SAAQ,SAACG,GACRA,EAAEhI,IAAMP,EAAKO,GAAKgI,EAAEjI,IAAMN,EAAKM,IACjCN,EAAO,CAACO,EAAGmI,SAAS7D,EAAW,GAAIvE,EAAGoI,SAAS7D,EAAW,IAC1D3E,EAAkBF,EAAM,OAAQF,QA6BhCmF,GAAiB,WACrB2D,aAAa3I,GACb8G,EAAe,2BAAID,GAAL,IAAkBJ,OAAO,EAAOhB,UAAU,KACxD7D,EAAQ,EACRoE,EAAWiC,OAAO,EAAGjC,EAAWgC,SA+BlC,OACE,8BACE,sBAAKtH,UAAU,sBAAf,UACE,cAAC,EAAD,CACEa,SAAU,kBAAMyD,MAChB7D,YAAaS,EACbN,cAAeuF,EAAYJ,MAC3BrF,gBAAiB,kBAAM0F,EAAe,2BAAID,GAAL,IAAkB9D,SAAS,MAChE1B,gBAAiB,kBAAMyF,EAAe,2BAAID,GAAL,IAAkBtC,SAAS,QAElE,qBAAK7D,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACE,cAAC,EAAD,CACE6B,cAAesE,EAAY9D,QAC3BT,aAAc6D,EACd9D,aAAcuC,EACdzC,cAhEQ,SACpBe,EACA0F,EACAC,GAEA3F,EAAM4F,iBACN5C,EAAY0C,GACZxC,EAAYyC,GAEZ/B,EAAe,2BAAID,GAAL,IAAkB9D,SAAS,MAwD7BX,aAAc,kBAAM0E,EAAe,2BAAID,GAAL,IAAkB9D,SAAS,QAE/D,cAAC,EAAD,CACEuB,cAAeuC,EAAYtC,QAC3BF,cAAe,kBAAMyC,EAAe,2BAAID,GAAL,IAAkBtC,SAAS,MAC9DA,QAASA,IAGTsC,EAAYJ,MAGZ,qCACGI,EAAYH,kBACX,sBAAKhG,UAAU,YAAf,UACE,0CACA,8CAGHmG,EAAYD,gBAAkB,cAAC,EAAD,IAC/B,qBAAKlG,UAAU,eAAf,SACGb,GACCA,EAAK+D,KAAI,SAACmF,GAAD,OACPA,EAAQnF,KAAI,SAACoF,GAAD,OACV,sBACEtI,UAAWsI,EAAG9I,KAEdS,MAAO,CAACsI,MAAM,GAAD,OAAK,IAAMrE,EAAX,MAAyBsE,OAAO,GAAD,OAAK,IAAMtE,EAAX,QADvCoE,EAAG1F,eAhBpB,cAAC,EAAD,CAAO9C,UAAW,kBA9M9BsG,EAAe,2BAAID,GAAL,IAAkBD,gBAAgB,EAAMH,OAAO,KAC7D5G,ECrEoB,SAACkC,GAIvB,IAHA,IAAIoH,EAAkB,GAChBC,EAAsB,GACxB9F,EAAK,EACA+F,EAAI,EAAGA,EAAItH,EAAMsH,IAAK,CAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIvH,EAAMuH,IACxBH,EAAQd,KAAK,CAAC/E,KAAIpD,KAAM,UACxBoD,GAAM,EAER8F,EAAUf,KAAKc,GACfA,EAAU,GAEZ,OAAOC,EDyDEG,CAAS3E,GAChB3C,EAAOkE,OACPnG,EAAYwJ,YAAW,WACrB1C,EAAe,2BAAID,GAAL,IAAkBD,gBAAgB,EAAOH,OAAO,KAC9D3G,EAAO,CAACQ,EAAG,EAAGD,EAAG,GACjB0F,EAAKkC,OAAO,EAAGlC,EAAKiC,QACpBjC,EAAKsC,KAAK,CAAC/H,EAAG,EAAGD,EAAG,IACpB0F,EAAKsC,KAAK,CAAC/H,EAAG,EAAGD,EAAG,IACpBN,EAAO,CAACO,EAAGmI,SAAS7D,EAAW,GAAIvE,EAAGoI,SAAS7D,EAAW,IAC1D3E,EAAkBH,EAAM,QAASD,GACjCkG,EAAKoC,SAAQ,SAACG,GAAD,OAAOrI,EAAkBqI,EAAG,OAAQzI,MACjDI,EAAkBF,EAAM,OAAQF,GAChCmG,EAAWqC,KAAK,cAChB7B,GAAgBD,KACf,SAuNQM,EAAYpB,UACX,cAAC,EAAD,CACET,eAAgB,kBAAMA,MACtBpD,MAAOA,EACPsD,WAAYA,EACZC,iBAAkB,SAAC1B,GAAD,OAAO4C,EAAc5C,EAAEE,OAAOJ,QAChD0B,cArFM,WACpB,IAAMwE,EAAqB,YAAOlF,GAC5BmF,EAAW1H,EAAmB2H,MAAK,SAACC,GAAD,OAAWA,EAAM3H,OAASkE,KAC7DxD,EAAmBd,EAAiB8H,MAAK,SAACE,GAAD,OAAcA,EAAS9H,OAAS6C,KACzEkF,EAAoB,CACxBxG,GAAIyG,cACJjI,KAAMoD,EACNtD,QAEA+C,WAAY+E,EAAS5H,KAErB8C,SAAUjC,EAAiBb,MAExBoD,GACH8E,MAAM,kCAERP,EAAYpB,KAAKyB,GACjB,IAAMG,EAAgBR,EAAYS,MAAK,SAACC,EAAGC,GACzC,OAAOA,EAAExI,MAAQuI,EAAEvI,SAErBoF,aAAaqD,QAAQ,eAAgBnD,KAAKoD,UAAUL,IACpD3D,EAAW2D,GACX5D,EAAc,IACdS,EAAe,2BAAID,GAAL,IAAkBpB,UAAU,EAAOgB,OAAO,KACxD7E,EAAQ,EACRoE,EAAWiC,OAAO,EAAGjC,EAAWgC,wBQ3OrBuC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAgD,IAA9CC,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QAC1DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9D,SAAS+D,eAAe,SAM1BZ,M","file":"static/js/main.21e379c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"OptionsWrapper\":\"options_OptionsWrapper__2PsF9\",\"active\":\"options_active__1_rN1\",\"options\":\"options_options__nr3ev\",\"label\":\"options_label__1SrfS\",\"dropDownList\":\"options_dropDownList__log8M\",\"buttonWrapper\":\"options_buttonWrapper__3xNVZ\",\"button\":\"options_button__3uHSc\",\"button2\":\"options_button2__3ZBzq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"header_headerWrapper__ICvco\",\"header\":\"header_header__3Vlc7\",\"image\":\"header_image__1Cakm\",\"buttonWrapper\":\"header_buttonWrapper__20iO5\",\"heading\":\"header_heading__C-U5B\",\"score\":\"header_score__3vZfW\",\"button\":\"header_button__1MuEN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ResultsWrapper\":\"results_ResultsWrapper__3ogL1\",\"active\":\"results_active__3dI35\",\"results\":\"results_results__1ndpj\",\"table\":\"results_table__RDHoF\",\"heading\":\"results_heading__2T_Lu\",\"resultList\":\"results_resultList__2QQ0a\",\"button\":\"results_button__2TF1X\",\"button2\":\"results_button2__2htk6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameOver\":\"gameOver_gameOver__3CFCK\",\"button\":\"gameOver_button__2g2dt\",\"heading\":\"gameOver_heading__3LxXA\",\"label\":\"gameOver_label__1fnPD\",\"inputWrapper\":\"gameOver_inputWrapper__Oz19r\",\"input\":\"gameOver_input__1Q0-v\",\"saveButton\":\"gameOver_saveButton__1ZCXh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"intro\":\"intro_intro__3YOy4\",\"button\":\"intro_button__1PKgd\",\"line\":\"intro_line__3SoZ_\",\"snake\":\"intro_snake__2zjXx\",\"ayes\":\"intro_ayes__3-uH2\",\"pizza\":\"intro_pizza__3e0vr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"animationWrapper\":\"startAnimation_animationWrapper__hstpp\",\"firstWord\":\"startAnimation_firstWord__eTseP\",\"secondWord\":\"startAnimation_secondWord__3f4zB\",\"animation\":\"startAnimation_animation__1gQOd\",\"gogogo\":\"startAnimation_gogogo__1yxvF\"};","import React, {useState, useEffect} from 'react';\nimport * as _ from 'lodash';\nimport './App.css';\nimport 'flexboxgrid';\nimport {v4 as uuidv4} from 'uuid';\nimport {drawGrid, Grid, Cell, Direction, fillOneCellOnGrid} from './drawGrid';\nimport Intro from './components/intro/intro';\nimport Header from './components/header/header';\nimport Options, {possibleGridSize, possibleSpeedLevel} from './components/options/options';\nimport StartAnimation from './components/startAnimation/startAnimation';\nimport Results from './components/results/results';\nimport GameOver from './components/gameOver/gameOver';\n\nlet grid: Grid[][];\nconst possibleKeyPress: Direction[] = ['ArrowUp', 'ArrowRight', 'ArrowLeft', 'ArrowDown'];\n\nexport type Result = {\n  id: string;\n  name: string;\n  score: number;\n  speedLevel: string;\n  gridSize: string;\n};\n\nlet head: Cell;\nlet food: Cell;\nconst tail: Cell[] = [];\nconst directions: Direction[] = ['ArrowRight'];\nlet score = 0;\nlet time = 0;\nlet myTimeOut:NodeJS.Timeout;\n\nconst App = () => {\n  const [gridSize, setGridSize] = useState(possibleGridSize[1].size);\n  const [moveTime, setMoveTime] = useState(possibleSpeedLevel[2].time);\n  const [resultName, setResultName] = useState('');\n  const [results, setResults] = useState<Result[]>([]);\n\n  const [refreshGrid, setRefreshGrid] = useState(true);\n  const [gameOptions, setGameOptions] = useState({\n    start: false,\n    gameOver: false,\n    levelUpAnimation: false,\n    introAnimation: false,\n    options: false,\n    results: false,\n    startAnimation: false,\n  });\n\n  useEffect(() => {\n    const storageSnakeResults = localStorage.getItem('snakeResults');\n    storageSnakeResults && setResults(JSON.parse(storageSnakeResults));\n    document.body.addEventListener('keydown', (e) => {\n      keyPressHandler(e.key);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!gameOptions.start) {\n      return;\n    }\n    findNextKeypress();\n    positionCheck();\n    moveTail();\n    moveHead(directions[0]);\n    const interval = setInterval(() => {\n      setRefreshGrid(!refreshGrid);\n    }, time);\n    // eslint-disable-next-line consistent-return\n    return () => clearInterval(interval);\n  }, [refreshGrid]);\n\n  const startGame = () => {\n    setGameOptions({...gameOptions, startAnimation: true, start: true});\n    grid = drawGrid(gridSize);\n    time = moveTime;\n    myTimeOut = setTimeout(() => {\n      setGameOptions({...gameOptions, startAnimation: false, start: true});\n      head = {x: 2, y: 0};\n      tail.splice(0, tail.length);\n      tail.push({x: 0, y: 0});\n      tail.push({x: 1, y: 0});\n      food = {x: _.random(gridSize - 1), y: _.random(gridSize - 1)};\n      fillOneCellOnGrid(head, 'snake', grid);\n      tail.forEach((t) => fillOneCellOnGrid(t, 'tail', grid));\n      fillOneCellOnGrid(food, 'food', grid);\n      directions.push('ArrowRight');\n      setRefreshGrid(!refreshGrid);\n    }, 3000);\n  };\n\n  const findNextKeypress = () => {\n    if (directions.length > 1) {\n      directions.splice(0, 1);\n    }\n  };\n\n  const keyPressHandler = (pressedKey: string) => {\n    possibleKeyPress.forEach((allowedDirection) => {\n      if (pressedKey === allowedDirection) {\n        if (pressedKey === 'ArrowLeft' && directions[0] === 'ArrowRight') {\n          return;\n        }\n        if (pressedKey === 'ArrowRight' && directions[0] === 'ArrowLeft') {\n          return;\n        }\n        if (pressedKey === 'ArrowDown' && directions[0] === 'ArrowUp') {\n          return;\n        }\n        if (pressedKey === 'ArrowUp' && directions[0] === 'ArrowDown') {\n          return;\n        }\n        directions.push(pressedKey);\n      }\n    });\n  };\n\n  const positionCheck = () => {\n    tail.forEach((t) => {\n      if (t.x === head.x && t.y === head.y) {\n        setGameOptions({...gameOptions, start: false, gameOver: true});\n      }\n    });\n  };\n\n  const moveHead = (dir: string) => {\n    switch (dir) {\n      case 'ArrowRight':\n        if (head.x === gridSize - 1) {\n          head = {x: 0, y: head.y};\n        } else {\n          head = {x: head.x + 1, y: head.y};\n        }\n\n        fillOneCellOnGrid({x: head.x, y: head.y}, 'snake', grid);\n        break;\n\n      case 'ArrowDown':\n        if (head.y === gridSize - 1) {\n          head = {x: head.x, y: 0};\n        } else {\n          head = {x: head.x, y: head.y + 1};\n        }\n\n        fillOneCellOnGrid({x: head.x, y: head.y}, 'snake', grid);\n        break;\n      case 'ArrowLeft':\n        if (head.x === 0) {\n          head = {x: gridSize - 1, y: head.y};\n        } else {\n          head = {x: head.x - 1, y: head.y};\n        }\n        fillOneCellOnGrid({x: head.x, y: head.y}, 'snake', grid);\n        break;\n      case 'ArrowUp':\n        if (head.y === 0) {\n          head = {x: head.x, y: gridSize - 1};\n        } else {\n          head = {x: head.x, y: head.y - 1};\n        }\n        fillOneCellOnGrid({x: head.x, y: head.y}, 'snake', grid);\n        break;\n    }\n  };\n\n  const moveTail = () => {\n    tail.push({x: head.x, y: head.y});\n    fillOneCellOnGrid(tail[0], 'empty', grid);\n    addNewFruit();\n    tail.forEach((t) => fillOneCellOnGrid(t, 'tail', grid));\n  };\n\n  const addNewFruit = () => {\n    if (head.x === food.x && head.y === food.y) {\n      if (score % 10 === 0) {\n        if (time > 50) {\n          time -= 5;\n        }\n      }\n      score += 1;\n      food = {x: _.random(gridSize - 1), y: _.random(gridSize - 1)};\n      fillOneCellOnGrid(food, 'food', grid);\n    } else {\n      tail.shift();\n    }\n    tail.forEach((t) => {\n      if (t.x === food.x && t.y === food.y) {\n        food = {x: _.random(gridSize - 1), y: _.random(gridSize - 1)};\n        fillOneCellOnGrid(food, 'food', grid);\n      }\n    });\n  };\n\n  // const showAnimation = () => {\n  //   if (score === 0 || score % 10) {\n  //     return;\n  //   }\n  //   setGameOptions({...gameOptions, levelUpAnimation: true});\n  //   // console.log('animation  On');\n  //   setTimeout(() => {\n  //     // console.log('timeout');\n  //     setGameOptions({...gameOptions, levelUpAnimation: false});\n  //   }, 4000);\n  // };\n\n  const handleOptions = (\n    event: React.FormEvent<HTMLFormElement>,\n    selectedGrid: number,\n    selectedSpeed: number\n  ) => {\n    event.preventDefault();\n    setGridSize(selectedGrid);\n    setMoveTime(selectedSpeed);\n    // moveTime = selectedSpeed;\n    setGameOptions({...gameOptions, options: false});\n  };\n\n  const endGameHandler = () => {\n    clearTimeout(myTimeOut);\n    setGameOptions({...gameOptions, start: false, gameOver: false});\n    score = 0;\n    directions.splice(0, directions.length);\n  };\n\n  const handleResults = () => {\n    const copyResults: Result[] = [...results];\n    const speedLVL = possibleSpeedLevel.find((speed) => speed.time === moveTime);\n    const selectedGridSize = possibleGridSize.find((gridGrid) => gridGrid.size === gridSize);\n    const resultObj: Result = {\n      id: uuidv4(),\n      name: resultName,\n      score,\n      // @ts-ignore\n      speedLevel: speedLVL.name,\n      // @ts-ignore\n      gridSize: selectedGridSize.name,\n    };\n    if (!resultName) {\n      alert('enter your name to save result');\n    }\n    copyResults.push(resultObj);\n    const sortedResults = copyResults.sort((a, b) => {\n      return b.score - a.score;\n    });\n    localStorage.setItem('snakeResults', JSON.stringify(sortedResults));\n    setResults(sortedResults);\n    setResultName('');\n    setGameOptions({...gameOptions, gameOver: false, start: false});\n    score = 0;\n    directions.splice(0, directions.length);\n  };\n\n  return (\n    <div>\n      <div className=\"container center-xs\">\n        <Header\n          stopGame={() => endGameHandler()}\n          headerScore={score}\n          isGameStarted={gameOptions.start}\n          showGameOptions={() => setGameOptions({...gameOptions, options: true})}\n          showGameResults={() => setGameOptions({...gameOptions, results: true})}\n        />\n        <div className=\"row\">\n          <div className=\"col-xs-12\">\n            <div className=\"game\">\n              <Options\n                activeOptions={gameOptions.options}\n                gameMoveTime={moveTime}\n                gameGridSize={gridSize}\n                handleOptions={handleOptions}\n                cancelOption={() => setGameOptions({...gameOptions, options: false})}\n              />\n              <Results\n                activeResults={gameOptions.results}\n                cancelResults={() => setGameOptions({...gameOptions, results: false})}\n                results={results}\n              />\n\n              {!gameOptions.start ? (\n                <Intro startGame={() => startGame()} />\n              ) : (\n                <>\n                  {gameOptions.levelUpAnimation && (\n                    <div className=\"animation\">\n                      <h1>LEVEL UP</h1>\n                      <h1>SPEED +10</h1>\n                    </div>\n                  )}\n                  {gameOptions.startAnimation && <StartAnimation />}\n                  <div className=\"grid-wrapper\">\n                    {grid &&\n                      grid.map((element) =>\n                        element.map((el) => (\n                          <span\n                            className={el.cell}\n                            key={el.id}\n                            style={{width: `${800 / gridSize}px`, height: `${800 / gridSize}px`}}\n                          />\n                        ))\n                      )}\n                  </div>\n                </>\n              )}\n              {gameOptions.gameOver && (\n                <GameOver\n                  endGameHandler={() => endGameHandler()}\n                  score={score}\n                  resultName={resultName}\n                  inputNameHandler={(e) => setResultName(e.target.value)}\n                  handleResults={handleResults}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","export type CellColor = 'empty' | 'snake' | 'food' | 'tail';\r\nexport type Direction = 'ArrowUp' | 'ArrowRight' | 'ArrowLeft' | 'ArrowDown';\r\nexport type Cell = {x: number; y: number};\r\nexport type Grid = {id: number; cell: CellColor};\r\n\r\nexport const drawGrid = (size: number): Grid[][] => {\r\n  let gridArr: Grid[] = [];\r\n  const gridArr2d: Grid[][] = [];\r\n  let id = 1;\r\n  for (let i = 0; i < size; i++) {\r\n    for (let j = 0; j < size; j++) {\r\n      gridArr.push({id, cell: 'empty'});\r\n      id += 1;\r\n    }\r\n    gridArr2d.push(gridArr);\r\n    gridArr = [];\r\n  }\r\n  return gridArr2d;\r\n};\r\n\r\nexport const fillOneCellOnGrid = (cell: Cell, color: CellColor, grid: Grid[][]) => {\r\n  const copyGrid = [...grid];\r\n  copyGrid[cell.y][cell.x].cell = color;\r\n  return copyGrid;\r\n};\r\n\r\n\r\n","import React, {FC} from 'react';\r\nimport style from './intro.module.css';\r\n\r\ntype Props = {\r\n  startGame: () => void;\r\n};\r\n\r\nconst Intro: FC<Props> = ({startGame}) => {\r\n  return (\r\n    <button type=\"button\" className={style.button} onClick={startGame}>\r\n      {' '}\r\n      start\r\n      <div className={style.line}>\r\n        {' '}\r\n        {/* <span className={style.ayes}>:-)</span>{' '} */}\r\n      </div>\r\n      <span className={style.food}>\r\n        <img\r\n          className={style.pizza}\r\n          src=\"https://image.similarpng.com/very-thumbnail/2020/06/Cartoon-funny-pizza-royalty-free-PNG.png\"\r\n          alt=\"pizza\"\r\n        />{' '}\r\n      </span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Intro;\r\n","\r\nimport React, {FC} from 'react';\r\nimport style from './header.module.css';\r\n\r\ntype Props = {\r\n  isGameStarted: boolean;\r\n  headerScore: number;\r\n  showGameOptions: () => void;\r\n  showGameResults: () => void;\r\n  stopGame: () => void;\r\n};\r\n\r\nconst Header: FC<Props> = ({headerScore, showGameOptions, showGameResults, isGameStarted, stopGame}) => {\r\n  return (\r\n    <div className={style.buttonWrapper}>\r\n      <div className={style.header}>\r\n        <img\r\n          src=\"https://www.iconarchive.com/download/i24292/martin-berube/animal/snake.ico\"\r\n          alt=\"image1\"\r\n          className={style.image}\r\n        />\r\n        {isGameStarted ? (\r\n          <h1 className={style.heading}>\r\n            {' '}\r\n            {headerScore > 0 && (\r\n              <span className={style.score}>\r\n                {headerScore}\r\n                {headerScore === 1 ? ' point' : ' points'}\r\n                {/* {!(headerScore % 10) && <span>Level Up! speed+5!</span>} */}\r\n              </span>\r\n            )} \r\n          </h1>\r\n        ) : (\r\n          <h1 className={style.heading}> THIS IS SNAKE GAME !</h1>\r\n        )}\r\n\r\n        <div className={style.buttonWrapper}>\r\n          {isGameStarted ? (\r\n            <>\r\n              <button type=\"button\" onClick={stopGame} className={style.button}>\r\n                end game\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <button type=\"button\" className={style.button} onClick={showGameResults}>results</button>\r\n              <button type=\"button\" onClick={showGameOptions} className={style.button}>\r\n                options\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, {FC, useState} from 'react';\r\nimport style from './options.module.css';\r\n\r\nexport const possibleGridSize = [\r\n  {name: 'small', size: 10},\r\n  {name: 'medium', size: 15},\r\n  {name: 'large', size: 22},\r\n  {name: 'extra large', size: 30},\r\n];\r\n\r\nexport const possibleSpeedLevel = [\r\n  {name: 'slow', time: 350},\r\n  {name: 'medium', time: 250},\r\n  {name: 'fast', time: 180},\r\n  {name: 'extra fast', time: 120},\r\n];\r\n\r\ntype Props = {\r\n  handleOptions: (\r\n    event: React.FormEvent<HTMLFormElement>,\r\n    selectedGrid: number,\r\n    selectedSpeed: number\r\n  ) => void;\r\n  cancelOption: () => void;\r\n  activeOptions: boolean;\r\n  gameGridSize: number;\r\n  gameMoveTime: number;\r\n};\r\n\r\ntype SpeedLevel = {\r\n  name: string;\r\n  time: number;\r\n};\r\n\r\ntype GridSize = {\r\n  name: string;\r\n  size: number;\r\n};\r\nconst Options: FC<Props> = ({\r\n  handleOptions,\r\n  cancelOption,\r\n  gameGridSize,\r\n  gameMoveTime,\r\n  activeOptions,\r\n}) => {\r\n  const [selectedSpeedLevel, setSelectedSpeedLevel] = useState(gameMoveTime);\r\n  const [selectedGridSize, setSelectedGrizSize] = useState(gameGridSize);\r\n\r\n  return (\r\n    <div className={`${style.OptionsWrapper} ${activeOptions && style.active}`}>\r\n      <form\r\n        className={style.options}\r\n        action=\"submit\"\r\n        onSubmit={(event) => handleOptions(event, selectedGridSize, selectedSpeedLevel)}\r\n      >\r\n        {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\r\n        <label htmlFor=\"speedLevel\" className={style.label}>\r\n          Select game speed\r\n          <select\r\n            className={style.dropDownList}\r\n            id=\"speedLevel\"\r\n            name=\"speedLevel\"\r\n            value={selectedSpeedLevel}\r\n            onChange={(e) => {\r\n              setSelectedSpeedLevel(parseInt(e.target.value, 10));\r\n            }}\r\n          >\r\n            {possibleSpeedLevel.map((level: SpeedLevel) => (\r\n              <option key={level.name} value={level.time}>\r\n                {level.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <label htmlFor=\"gridSize\" className={style.label}>\r\n          Select grid size\r\n          <select\r\n            className={style.dropDownList}\r\n            id=\"gridSize\"\r\n            name=\"gridSize\"\r\n            value={selectedGridSize}\r\n            onChange={(e) => setSelectedGrizSize(parseInt(e.target.value, 10))}\r\n          >\r\n            {possibleGridSize.map((grid: GridSize) => (\r\n              <option key={grid.name} value={grid.size}>\r\n                {grid.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n\r\n        <div className={style.buttonWrapper}>\r\n          <button type=\"submit\" className={style.button}>\r\n            {' '}\r\n            SAVE\r\n          </button>\r\n          <button type=\"button\" className={style.button} onClick={cancelOption}>\r\n            CANCEL\r\n          </button>\r\n        </div>\r\n        <button type=\"button\" className={style.button2} onClick={cancelOption}>\r\n          X\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","import React from 'react';\r\nimport style from './startAnimation.module.css';\r\n\r\nconst StartAnimation = () => {\r\n  return (\r\n    <div className={style.animationWrapper}>\r\n      <span className={style.animation}>\r\n        <span className={style.firstWord}>Let's</span>\r\n        <span className={style.secondWord}>GO!!!</span>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartAnimation;\r\n","import React, {FC} from 'react';\r\nimport style from './results.module.css';\r\nimport type {Result} from '../../App';\r\n\r\ntype Props = {\r\n  results: Result[];\r\n  cancelResults: () => void;\r\n  activeResults: boolean;\r\n};\r\n\r\nconst Results: FC<Props> = ({cancelResults, activeResults, results}) => {\r\n  return (\r\n    <div className={`${style.ResultsWrapper} ${activeResults && style.active}`}>\r\n      <div className={style.results}>\r\n        <h5 className={style.heading}>Results</h5>\r\n        <table className={style.table}>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>name</th>\r\n              <th>score</th>\r\n              <th>speed level</th>\r\n              <th>grid size</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {results.map(({id, name, score, speedLevel, gridSize}, index) => (\r\n              <tr key={id} className={style.resultList}>\r\n                <td>{index + 1}</td>\r\n                <td>{name.substring(0, 12)}</td>\r\n                <td>{score}</td>\r\n                <td>{speedLevel}</td>\r\n                <td>{gridSize}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <button type=\"button\" className={style.button} onClick={cancelResults}>\r\n          BACK TO GAME\r\n        </button>\r\n        <button type=\"button\" className={style.button2} onClick={cancelResults}>\r\n          X\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React, {FC, useRef, useEffect} from 'react';\r\nimport style from './gameOver.module.css';\r\n\r\ntype Props = {\r\n  score: number;\r\n  resultName: string;\r\n  handleResults: () => void;\r\n  endGameHandler: () => void;\r\n  inputNameHandler: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n};\r\n\r\nconst GameOver: FC<Props> = ({\r\n  score,\r\n  endGameHandler,\r\n  handleResults,\r\n  resultName,\r\n  inputNameHandler,\r\n}) => {\r\n  const inputEl = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    inputEl.current.focus();\r\n  }, []);\r\n  return (\r\n    <div className={style.gameOver}>\r\n      <h1 className={style.heading}> Congratz, you got {score} points! </h1>\r\n      <label htmlFor=\"inputName\">\r\n        <p className={style.label}>enter your name to save result!</p>\r\n        <div className={style.inputWrapper}>\r\n          <input\r\n            ref={inputEl}\r\n            className={style.input}\r\n            id=\"inputValue\"\r\n            type=\"text\"\r\n            value={resultName}\r\n            onChange={inputNameHandler}\r\n          />\r\n          <button onClick={() => handleResults()} type=\"button\" className={style.saveButton}>\r\n            save\r\n          </button>\r\n        </div>\r\n      </label>\r\n      <button type=\"button\" className={style.button} onClick={endGameHandler}>\r\n        {' '}\r\n        Play Again!\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameOver;\r\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}